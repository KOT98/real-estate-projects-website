/*
 Animation keyframes
 */
@mixin keyframes($animation-name) {
     @-webkit-keyframes #{$animation-name}{
        @content;
    }
    @-moz-keyframes #{$animation-name} {
         @content;
    }
    @-ms-keyframes #{$animation-name} {
         @content;
    }
    @-o-keyframes #{$animation-name} {
         @content;
    }
    @keyframes #{$animation-name} {
         @content;
    }
}
@mixin animation($str) {
    -webkit-animation: #{$str};
    -moz-animation: #{$str};
    -ms-animation: #{$str};
    -o-animation: #{$str};
    animation: #{$str};
}
/*
 Transisitions
 */
@mixin transition($args...) {
    -webkit-transition: $args;
    -moz-transition: $args;
    -ms-transition: $args;
    -o-transition: $args;
    transition: $args;
}
/*
 Opacity
 */
@mixin opacity($opacity) {
    opacity: $opacity;
    filter: alpha(opacity=$opacity-ie); //IE8

    $opacity-ie: $opacity * 100;
}
/*
 Auto center an object
 */
@mixin push--auto {
    margin: {
        right: auto;
        left: auto;
    }
}
/*
 Use everytime with :after and :before
 */
@mixin pseudo($display: block, $pos: absolute, $content: '') {
    position: $pos;
    display: $display;
    content: $content;
}
/*
 MediaQuery
 */
$breakpoints: ( "phone": 400px, "phone-wide": 480px, "phablet": 560px, "tablet-small": 640px, "tablet": 768px, "tablet-wide": 1024px, "desktop": 1248px, "desktop-wide": 1440px );
@mixin mq($width, $type: min) {
     @if map_has_key($breakpoints, $width){
        $width: map_get($breakpoints, $width);
        @if $type == max {
            $width: $width - 1px;
        }
        @media only screen and (#{$type}-width: $width) {
             @content;
        }
    }
}
/*
 Centering a ghost object
 */
@mixin ghostVerticalAlign() {
    &:before {
        display: inline-block;
        width: 0.1px;
        height: 100%;
        content: '';
        vertical-align: middle;
    }
}
/*
 Dropshadow
 */
@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
     @if $inset{
        -webkit-box-shadow: inset $top $left $blur $color;
        -moz-box-shadow: inset $top $left $blur $color;
        box-shadow: inset $top $left $blur $color;
    }
    @else {
        -webkit-box-shadow: $top $left $blur $color;
        -moz-box-shadow: $top $left $blur $color;
        box-shadow: $top $left $blur $color;
    }
}
/*
 Border radius
 */
@mixin rounded($radius: 4px) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    border-radius: $radius;
}
/*
 Placeholders
 */
@mixin placeholder {
    ::-webkit-input-placeholder {
        @content
    };

    :-moz-placeholder {
        @content
    };

    ::-moz-placeholder {
        @content
    };

    :-ms-input-placeholder {
        @content
    };
}
/*
 generic transform
 */
@mixin transform($transforms) {
    -webkit-transform: $transforms;
    -moz-transform: $transforms;
    -ms-transform: $transforms;
    -o-transform: $transforms;
    transform: $transforms;
}
/*
 Rotate
 */
@mixin rotate ($deg) {
     @include transform(rotate(#{$deg}deg));
}
/*
 Scale
 */
@mixin scale($scale) {
     @include transform(scale($scale));
}
/*
 Translate
 */
@mixin translate ($x, $y) {
     @include transform(translate($x, $y));
}
/*
 Skew
 */
@mixin skew ($x, $y) {
     @include transform(skew(#{$x}deg, #{$y}deg));
}
/*
 Transform origin
 */
@mixin transform-origin ($origin) {
    -webkit-transform-origin: $origin;
    -ms-transform-origin: $origin;
    -o-transform-origin: $origin;
    transform-origin: $origin;

    moz-transform-origin: $origin;
}
/*
 Disable user selection
 */
@mixin noselect {
    -webkit-touch-callout: none;
    /* iOS Safari */
    -webkit-user-select: none;
    /* Safari */
    -khtml-user-select: none;
    /* Konqueror HTML */
    -moz-user-select: none;
    /* Firefox */
    -ms-user-select: none;
    /* Internet Explorer/Edge */
    user-select: none;
    /* Non-prefixed version, currently
                                  supported by Chrome and Opera */
}
/*
 Box sizing
 */
@mixin contain() {
  -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */
  -moz-box-sizing: border-box;    /* Firefox, other Gecko */
  box-sizing: border-box;         /* Opera/IE 8+ */
}
